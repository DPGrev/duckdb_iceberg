# name: test/sql/iceberg_scan_snowflake.test_slow
# description: Tests with the snowflake test data set
# group: [iceberg]

require parquet

require iceberg

require httpfs

require icu

# Latest test data provided by Dean
# S.F. 001
# - After only loading the data:
#       - parquet: s3://dev-dean-de-leo/snowflake/stage/lineitem_sf001_before_updates.parquet
#       - iceberg: s3://dev-dean-de-leo/snowflake/volume/26684633030674/metadata/v1.metadata.json
# - After the 5 update queries from your test set:
#       - parquet: s3://dev-dean-de-leo/snowflake/stage/lineitem_sf001_after_updates.parquet
#       - iceberg: s3://dev-dean-de-leo/snowflake/volume/26684633030674/metadata/v6.metadata.json
# - Note:  I (Sam Ansmink) Manually Copied the latest version here: `data/iceberg/snowflake`, I manually merged the snapshots
#          into the v6.metadata.json
# - Note2: The original parquet file for this test data is in `data/iceberg_base_parquet`

# TODO: why are the timestamps so tiny?
query IIII
FROM iceberg_snapshots('data/iceberg/snowflake');
----
1	1680614498456	1970-01-01 00:28:00.614	s3://dev-dean-de-leo/snowflake/volume/26684633030674/metadata/snap-1680614498456.avro
2	1680614904678	1970-01-01 00:28:00.614	s3://dev-dean-de-leo/snowflake/volume/26684633030674/metadata/snap-1680614904678.avro
3	1680615031982	1970-01-01 00:28:00.615	s3://dev-dean-de-leo/snowflake/volume/26684633030674/metadata/snap-1680615031982.avro
4	1680615103765	1970-01-01 00:28:00.615	s3://dev-dean-de-leo/snowflake/volume/26684633030674/metadata/snap-1680615103765.avro
5	1680615149199	1970-01-01 00:28:00.615	s3://dev-dean-de-leo/snowflake/volume/26684633030674/metadata/snap-1680615149199.avro
6	1680615207024	1970-01-01 00:28:00.615	s3://dev-dean-de-leo/snowflake/volume/26684633030674/metadata/snap-1680615207024.avro

# Latest snapshot is AOK
statement ok
SELECT count(*) FROM ICEBERG_SCAN('data/iceberg/snowflake', 1680615207024::UBIGINT);

# Why are the others gone though?
statement error
SELECT count(*) FROM ICEBERG_SCAN('data/iceberg/snowflake', 1680614498456::UBIGINT);
----
HTTP Error: Unable to connect to URL "https://dev-dean-de-leo.s3.amazonaws.com/snowflake/volume/lineitem_26684633030674_rslefz_26685037941574_rw_1_001.parquet": 404 (Not Found)

# Sanity check
query I nosort q1_count
SELECT COUNT(*) FROM ICEBERG_SCAN('s3://dev-dean-de-leo/snowflake/volume/26684633030674');
----

query I nosort q1_count
SELECT COUNT(*) FROM PARQUET_SCAN('s3://dev-dean-de-leo/snowflake/stage/lineitem_sf001_after_updates.parquet');
----

###
### Check data matches: (snowflake iceberg = snowflake parquet = duckdb parquet)
###

# Snowflake's Iceberg format
query I nosort q1_content
SELECT
    L_ORDERKEY_BOOL,
    L_PARTKEY_INT,
    L_SUPPKEY_LONG,
    L_EXTENDEDPRICE_FLOAT,
    L_EXTENDEDPRICE_DOUBLE,
    L_EXTENDEDPRICE_DEC9_2,
    L_EXTENDEDPRICE_DEC18_6,
    L_EXTENDEDPRICE_DEC38_10,
    L_COMMENT_STRING,
    UUID::UUID,
    L_SHIPDATE_DATE,
    L_PARTKEY_TIME,
FROM
    ICEBERG_SCAN('s3://dev-dean-de-leo/snowflake/volume/26684633030674') ORDER BY uuid, L_EXTENDEDPRICE_DEC9_2 NULLS LAST;
----

## Snowflake's Parquet format
query I nosort q1_content
SELECT
    L_ORDERKEY_BOOL,
    L_PARTKEY_INT,
    L_SUPPKEY_LONG,
    L_EXTENDEDPRICE_FLOAT::FLOAT,
    L_EXTENDEDPRICE_DOUBLE,
    L_EXTENDEDPRICE_DEC9_2,
    L_EXTENDEDPRICE_DEC18_6,
    L_EXTENDEDPRICE_DEC38_10,
    L_COMMENT_STRING,
    UUID::UUID,
    L_SHIPDATE_DATE,
    L_PARTKEY_TIME::TIME
FROM
    PARQUET_SCAN('s3://dev-dean-de-leo/snowflake/stage/lineitem_sf001_after_updates.parquet') ORDER BY uuid, L_EXTENDEDPRICE_DEC9_2 NULLS LAST;
----

# DuckDB's parquet format
query I nosort q1_content
SELECT
    L_ORDERKEY_BOOL,
    L_PARTKEY_INT,
    L_SUPPKEY_LONG,
    L_EXTENDEDPRICE_FLOAT::FLOAT,
    L_EXTENDEDPRICE_DOUBLE,
    L_EXTENDEDPRICE_DEC9_2,
    L_EXTENDEDPRICE_DEC18_6,
    L_EXTENDEDPRICE_DEC38_10,
    L_COMMENT_STRING,
    UUID,
    L_SHIPDATE_DATE,
    L_PARTKEY_TIME
FROM
    PARQUET_SCAN('data/iceberg/snowflake_base_parquet/data_sf0.01_after.parquet') ORDER BY uuid, L_EXTENDEDPRICE_DEC9_2 NULLS LAST;
----

#    TODO: These columns don't match (without casting) for various reasons:
#
#    UUID                           |   Exported as VARCHAR in parquet and iceberg
#    L_PARTKEY_TIME                 |   read as 'timestamp with time zone' in parquet, is without timezone in iceberg
#    L_PARTKEY_TIME_TZ              |   read as 'timestamp with time zone' in parquet, is without timezone in iceberg
#    L_COMMITDATE_TIMESTAMP         |   exported to string in parquet, 'timestamp with timezone' in iceberg
#    L_COMMITDATE_TIMESTAMP_TZ      |   exported to string in parquet, struct of timestamp with timezone + timezone
#    L_SHIPMODE_QUANTITY_STRUCT     |   Nested types are exported weirdly/incorrectly in for iceberg parquet files
#    L_LINENUMBER_QUANTITY_LIST     |   Nested types are exported weirdly/incorrectly in for iceberg parquet files
#    L_LINENUMBER_QUANTITY_MAP      |   Nested types are exported weirdly/incorrectly in for iceberg parquet files
#    L_COMMENT_BLOB                 |   (incorrectly?) converted to a varchar in parquet, seems fine in iceberg
#    L_EXTENDEDPRICE_FLOAT          |   Converted to double by snowflake in parquet

#   What to do for each column:
#    UUID                           |   Nothing: Cast type to UUID in DuckDB
#    L_PARTKEY_TIME                 |   Nothing: Behaviour in snowflake iceberg seems good, use cast for testing
#    L_PARTKEY_TIME_TZ              |   Nothing: TZ type is not supported in iceberg spec, so we dont need to test it
#    L_COMMITDATE_TIMESTAMP         |   Investigate: Why does snowflake convert data read with AdjustedToUTC=False to True in test setup?
#    L_COMMITDATE_TIMESTAMP_TZ      |   Investigate: The struct is wrong
#    L_SHIPMODE_QUANTITY_STRUCT     |   Investigate: Nested types exported in weird way for iceberg
#    L_LINENUMBER_QUANTITY_LIST     |   Investigate: Nested types exported in weird way for iceberg
#    L_LINENUMBER_QUANTITY_MAP      |   Investigate: Nested types exported in weird way for iceberg
#    L_COMMENT_BLOB                 |   Bug report snowflake? Snowflake seems to malform the blob for some reason?
#    L_EXTENDEDPRICE_FLOAT          |   Nothing: add cast for test